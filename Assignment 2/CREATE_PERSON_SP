create or replace procedure CREATE_PERSON_SP (
    p_person_ID             OUT INTEGER, -- an output parameter
    p_person_email          IN VARCHAR,  -- Must be unique, not null
    P_person_given_name     IN VARCHAR,  -- NOT NULL, if email is unique (new)
    p_person_surname        IN VARCHAR,  -- NOT NULL, if email is unique (new)
    p_person_phone          IN VARCHAR
)
IS
email_check NUMBER;
ex_Error EXCEPTION;
ex_Error_null EXCEPTION;
lv_errormsg_txt VARCHAR(100);
BEGIN

SELECT COUNT (*)
INTO email_check
FROM VM_PERSON
WHERE p_person_email = PERSON_EMAIL;

IF email_check > 0 THEN

SELECT PERSON_ID
INTO p_person_ID
FROM VM_PERSON
WHERE p_person_email = PERSON_EMAIL;

lv_errormsg_txt := 'Email address' || p_person_email || ' is used by Person id ' || p_person_ID;
RAISE ex_Error;

ELSIF email_check = 0 THEN
p_person_ID := PERSON_ID_SEQ.nextval;

END IF;

IF p_person_email is NULL THEN
   RAISE ex_Error_null;
    END IF;


    INSERT INTO vm_person (
    person_id,
    person_email,
    person_given_name,
    person_surname,
    person_phone )
    VALUES (
    p_person_id,
    p_person_email,
    P_person_given_name,
    p_person_surname,
    p_person_phone
);

 COMMIT;
 
  EXCEPTION
  When ex_Error THEN
  DBMS_OUTPUT.PUT_LINE (lv_errormsg_txt);
  ROLLBACK;
    
     WHEN ex_Error_null THEN
    DBMS_OUTPUT.PUT_LINE('Error text:  "Missing mandatory value for parameter (x)  in context (y).  No person added."');
    DBMS_OUTPUT.PUT_LINE('Error meaning: A mandatory value is missing.  Here, y = "CREATE_PERSON_SP" ');
    DBMS_OUTPUT.PUT_LINE('Error effect: Because a mandatory value is not provided, no data are 
            inserted into the VM_PERSON table.  The p_person_id value returned is NULL.  ');
            
    ROLLBACK;
     WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE ('THE ERROR CODE IS ' || SQLCODE);
    DBMS_OUTPUT.PUT_LINE ('THE ERROR msg IS ' || SQLCODE);
    ROLLBACK;  
    
    END;


